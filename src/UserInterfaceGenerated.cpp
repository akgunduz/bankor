///////////////////////////////////////////////////////////////////////////// C++ code generated with wxFormBuilder (version Sep 12 2010)// http://www.wxformbuilder.org///// PLEASE DO "NOT" EDIT THIS FILE!///////////////////////////////////////////////////////////////////////////#include "UserInterfaceGenerated.h"///////////////////////////////////////////////////////////////////////////MainFrame::MainFrame( wxWindow* parent, wxWindowID id, const wxString& title, const wxPoint& pos, const wxSize& size, long style ) : wxFrame( parent, id, title, pos, size, style ){	this->SetSizeHints( wxDefaultSize, wxDefaultSize );		wxBoxSizer* bSizer1;	bSizer1 = new wxBoxSizer( wxVERTICAL );		wxBoxSizer* bSizer33;	bSizer33 = new wxBoxSizer( wxVERTICAL );		genericPanel = new wxPanel( this, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL );	genericPanel->Hide();		wxBoxSizer* bSizer34;	bSizer34 = new wxBoxSizer( wxVERTICAL );		m_staticText39 = new wxStaticText( genericPanel, wxID_ANY, wxT("Common"), wxDefaultPosition, wxDefaultSize, 0 );	m_staticText39->Wrap( -1 );	bSizer34->Add( m_staticText39, 0, wxALIGN_CENTER|wxALL, 5 );		wxBoxSizer* bSizer35;	bSizer35 = new wxBoxSizer( wxHORIZONTAL );			bSizer35->Add( 0, 0, 0, wxEXPAND, 5 );		wxBoxSizer* bSizer53;	bSizer53 = new wxBoxSizer( wxHORIZONTAL );		tcpLoopback = new wxCheckBox( genericPanel, wxID_ANY, wxT("TCP LoopBack"), wxDefaultPosition, wxDefaultSize, 0 );	bSizer53->Add( tcpLoopback, 0, wxALIGN_CENTER|wxALL, 5 );		m_staticText312 = new wxStaticText( genericPanel, wxID_ANY, wxT("Root Path :"), wxDefaultPosition, wxDefaultSize, 0 );	m_staticText312->Wrap( -1 );	bSizer53->Add( m_staticText312, 0, wxALIGN_CENTER|wxALL, 5 );		rootpathPicker = new wxDirPickerCtrl( genericPanel, wxID_ANY, wxEmptyString, wxT("Select a folder"), wxDefaultPosition, wxDefaultSize, wxDIRP_DEFAULT_STYLE );	bSizer53->Add( rootpathPicker, 1, wxALL, 5 );		bSizer35->Add( bSizer53, 1, wxEXPAND, 5 );		bSizer34->Add( bSizer35, 1, wxEXPAND, 5 );		genericPanel->SetSizer( bSizer34 );	genericPanel->Layout();	bSizer34->Fit( genericPanel );	bSizer33->Add( genericPanel, 1, wxEXPAND | wxALL, 5 );		bSizer1->Add( bSizer33, 0, wxEXPAND, 5 );		noteBook = new wxNotebook( this, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxNB_MULTILINE|wxNB_NOPAGETHEME );	panelDistributor = new wxPanel( noteBook, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxDOUBLE_BORDER|wxTAB_TRAVERSAL );	wxBoxSizer* bSizerDistributor1;	bSizerDistributor1 = new wxBoxSizer( wxVERTICAL );		wxBoxSizer* bSizerInterfaceDist2;	bSizerInterfaceDist2 = new wxBoxSizer( wxHORIZONTAL );		wxBoxSizer* bSizer521;	bSizer521 = new wxBoxSizer( wxHORIZONTAL );		lblinterface1 = new wxStaticText( panelDistributor, wxID_ANY, wxT("Collector Interface : "), wxDefaultPosition, wxDefaultSize, 0 );	lblinterface1->Wrap( -1 );	bSizer521->Add( lblinterface1, 0, wxALIGN_CENTER|wxALL, 5 );		wxArrayString distCollInterfaceChoices;	distCollInterface = new wxChoice( panelDistributor, wxID_ANY, wxDefaultPosition, wxDefaultSize, distCollInterfaceChoices, 0 );	distCollInterface->SetSelection( 0 );	bSizer521->Add( distCollInterface, 0, wxALIGN_CENTER|wxALL, 5 );		bSizerInterfaceDist2->Add( bSizer521, 3, wxEXPAND, 5 );		wxBoxSizer* bSizer5212;	bSizer5212 = new wxBoxSizer( wxHORIZONTAL );		lblinterface12 = new wxStaticText( panelDistributor, wxID_ANY, wxT("Node Interface : "), wxDefaultPosition, wxDefaultSize, 0 );	lblinterface12->Wrap( -1 );	bSizer5212->Add( lblinterface12, 0, wxALIGN_CENTER|wxALL, 5 );		wxArrayString distClientInterfaceChoices;	distClientInterface = new wxChoice( panelDistributor, wxID_ANY, wxDefaultPosition, wxDefaultSize, distClientInterfaceChoices, 0 );	distClientInterface->SetSelection( 0 );	bSizer5212->Add( distClientInterface, 0, wxALIGN_CENTER|wxALL, 5 );		bSizerInterfaceDist2->Add( bSizer5212, 3, wxEXPAND, 5 );		bSizerDistributor1->Add( bSizerInterfaceDist2, 0, wxEXPAND, 5 );		wxBoxSizer* bSizerInterfaceDist22;	bSizerInterfaceDist22 = new wxBoxSizer( wxHORIZONTAL );		wxBoxSizer* bSizer552;	bSizer552 = new wxBoxSizer( wxHORIZONTAL );		wxBoxSizer* bSizer64;	bSizer64 = new wxBoxSizer( wxHORIZONTAL );		lbl_dist_address22 = new wxStaticText( panelDistributor, wxID_ANY, wxT("Collector Interface Address : "), wxDefaultPosition, wxDefaultSize, 0 );	lbl_dist_address22->Wrap( -1 );	bSizer64->Add( lbl_dist_address22, 0, wxALL|wxEXPAND, 5 );		distCollInterfaceAddress = new wxStaticText( panelDistributor, wxID_ANY, wxEmptyString, wxDefaultPosition, wxDefaultSize, 0 );	distCollInterfaceAddress->Wrap( -1 );	bSizer64->Add( distCollInterfaceAddress, 0, wxALL, 5 );		bSizer552->Add( bSizer64, 1, wxEXPAND, 5 );		wxBoxSizer* bSizer65;	bSizer65 = new wxBoxSizer( wxHORIZONTAL );		lbl_dist_address221 = new wxStaticText( panelDistributor, wxID_ANY, wxT("Node Interface Address : "), wxDefaultPosition, wxDefaultSize, 0 );	lbl_dist_address221->Wrap( -1 );	bSizer65->Add( lbl_dist_address221, 0, wxALL, 5 );		distClientInterfaceAddress = new wxStaticText( panelDistributor, wxID_ANY, wxEmptyString, wxDefaultPosition, wxDefaultSize, 0 );	distClientInterfaceAddress->Wrap( -1 );	bSizer65->Add( distClientInterfaceAddress, 0, wxALL, 5 );		bSizer552->Add( bSizer65, 1, wxEXPAND, 5 );		bSizerInterfaceDist22->Add( bSizer552, 1, wxEXPAND, 5 );		bSizerDistributor1->Add( bSizerInterfaceDist22, 0, wxEXPAND, 5 );		wxBoxSizer* bSizerInterfaceDist2112;	bSizerInterfaceDist2112 = new wxBoxSizer( wxHORIZONTAL );		wxBoxSizer* bSizer55113;	bSizer55113 = new wxBoxSizer( wxHORIZONTAL );		lbl_dist_address2113 = new wxStaticText( panelDistributor, wxID_ANY, wxT("Backup Rate : "), wxDefaultPosition, wxDefaultSize, 0 );	lbl_dist_address2113->Wrap( -1 );	bSizer55113->Add( lbl_dist_address2113, 0, wxALL|wxEXPAND, 5 );		distBackupRate = new wxTextCtrl( panelDistributor, wxID_ANY, wxT("0"), wxDefaultPosition, wxDefaultSize, wxTE_DONTWRAP );	bSizer55113->Add( distBackupRate, 0, wxALL, 5 );			bSizer55113->Add( 0, 0, 1, wxEXPAND, 5 );		m_staticText40 = new wxStaticText( panelDistributor, wxID_ANY, wxT("Backup Count :"), wxDefaultPosition, wxDefaultSize, 0 );	m_staticText40->Wrap( -1 );	bSizer55113->Add( m_staticText40, 0, wxALL, 5 );		distBackupCount = new wxStaticText( panelDistributor, wxID_ANY, wxT("0"), wxDefaultPosition, wxDefaultSize, 0 );	distBackupCount->Wrap( -1 );	bSizer55113->Add( distBackupCount, 0, wxALL, 5 );			bSizer55113->Add( 0, 0, 1, wxEXPAND, 5 );		m_staticText43 = new wxStaticText( panelDistributor, wxID_ANY, wxT("Backup Ready :"), wxDefaultPosition, wxDefaultSize, 0 );	m_staticText43->Wrap( -1 );	bSizer55113->Add( m_staticText43, 0, wxALL, 5 );		distBackupReady = new wxStaticText( panelDistributor, wxID_ANY, wxT("0"), wxDefaultPosition, wxDefaultSize, 0 );	distBackupReady->Wrap( -1 );	bSizer55113->Add( distBackupReady, 0, wxALL, 5 );		bSizerInterfaceDist2112->Add( bSizer55113, 1, wxEXPAND, 5 );		bSizerDistributor1->Add( bSizerInterfaceDist2112, 0, wxEXPAND, 5 );		wxBoxSizer* bSizer652;	bSizer652 = new wxBoxSizer( wxHORIZONTAL );			bSizer652->Add( 0, 0, 1, wxEXPAND, 5 );		distInitBtn = new wxButton( panelDistributor, wxID_ANY, wxT("Init"), wxDefaultPosition, wxDefaultSize, 0 );	bSizer652->Add( distInitBtn, 0, wxALIGN_RIGHT|wxALL, 5 );			bSizer652->Add( 0, 0, 1, wxEXPAND, 5 );		distPollBtn = new wxButton( panelDistributor, wxID_ANY, wxT("Poll"), wxDefaultPosition, wxDefaultSize, 0 );	bSizer652->Add( distPollBtn, 0, wxALL, 5 );			bSizer652->Add( 0, 0, 1, wxEXPAND, 5 );		distCleanUpBtn = new wxButton( panelDistributor, wxID_ANY, wxT("CleanUp"), wxDefaultPosition, wxDefaultSize, 0 );	bSizer652->Add( distCleanUpBtn, 0, wxALL, 5 );			bSizer652->Add( 0, 0, 1, wxEXPAND, 5 );		bSizerDistributor1->Add( bSizer652, 0, wxEXPAND, 5 );		wxBoxSizer* bSizer241;	bSizer241 = new wxBoxSizer( wxHORIZONTAL );		wxBoxSizer* bSizerCollDist2;	bSizerCollDist2 = new wxBoxSizer( wxVERTICAL );		wxBoxSizer* bSizer75;	bSizer75 = new wxBoxSizer( wxHORIZONTAL );		lbl_attached_collectors1 = new wxStaticText( panelDistributor, wxID_ANY, wxT("Collectors"), wxDefaultPosition, wxDefaultSize, 0 );	lbl_attached_collectors1->Wrap( -1 );	bSizer75->Add( lbl_attached_collectors1, 1, wxALL, 5 );		bSizerCollDist2->Add( bSizer75, 1, wxEXPAND, 5 );		distCollList = new wxListCtrl( panelDistributor, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxLC_REPORT|wxLC_SINGLE_SEL|wxLC_VRULES );	bSizerCollDist2->Add( distCollList, 9, wxALL|wxEXPAND, 5 );		bSizer241->Add( bSizerCollDist2, 1, 0, 5 );		wxBoxSizer* bSizerCollDist11;	bSizerCollDist11 = new wxBoxSizer( wxVERTICAL );		wxBoxSizer* bSizer751;	bSizer751 = new wxBoxSizer( wxHORIZONTAL );		lbl_attached_collectors12 = new wxStaticText( panelDistributor, wxID_ANY, wxT("Clients"), wxDefaultPosition, wxDefaultSize, 0 );	lbl_attached_collectors12->Wrap( -1 );	bSizer751->Add( lbl_attached_collectors12, 1, wxALL, 5 );		bSizerCollDist11->Add( bSizer751, 1, wxEXPAND, 5 );		distClientList = new wxListCtrl( panelDistributor, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxLC_REPORT|wxLC_SINGLE_SEL|wxLC_VRULES );	bSizerCollDist11->Add( distClientList, 9, wxALL|wxEXPAND, 5 );		bSizer241->Add( bSizerCollDist11, 1, 0, 5 );		bSizerDistributor1->Add( bSizer241, 0, wxEXPAND, 5 );		distLog = new wxListBox( panelDistributor, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, NULL, 0 ); 	bSizerDistributor1->Add( distLog, 1, wxALL|wxEXPAND, 5 );		panelDistributor->SetSizer( bSizerDistributor1 );	panelDistributor->Layout();	bSizerDistributor1->Fit( panelDistributor );	noteBook->AddPage( panelDistributor, wxT("Distributor"), true );	panelCollector = new wxPanel( noteBook, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxDOUBLE_BORDER|wxTAB_TRAVERSAL );	wxBoxSizer* bSizerDistributor11;	bSizerDistributor11 = new wxBoxSizer( wxVERTICAL );		wxBoxSizer* bSizerInterfaceDist21;	bSizerInterfaceDist21 = new wxBoxSizer( wxHORIZONTAL );		wxBoxSizer* bSizer5211;	bSizer5211 = new wxBoxSizer( wxHORIZONTAL );		lblinterface11 = new wxStaticText( panelCollector, wxID_ANY, wxT("Distributor Interface : "), wxDefaultPosition, wxDefaultSize, 0 );	lblinterface11->Wrap( -1 );	bSizer5211->Add( lblinterface11, 0, wxALIGN_CENTER|wxALL, 5 );		wxArrayString collDistInterfaceChoices;	collDistInterface = new wxChoice( panelCollector, wxID_ANY, wxDefaultPosition, wxDefaultSize, collDistInterfaceChoices, 0 );	collDistInterface->SetSelection( 0 );	bSizer5211->Add( collDistInterface, 0, wxALIGN_CENTER|wxALL, 5 );		bSizerInterfaceDist21->Add( bSizer5211, 3, wxEXPAND, 5 );		wxBoxSizer* bSizer52111;	bSizer52111 = new wxBoxSizer( wxHORIZONTAL );		lblinterface111 = new wxStaticText( panelCollector, wxID_ANY, wxT("Node Interface : "), wxDefaultPosition, wxDefaultSize, 0 );	lblinterface111->Wrap( -1 );	bSizer52111->Add( lblinterface111, 0, wxALIGN_CENTER|wxALL, 5 );		wxArrayString collClientInterfaceChoices;	collClientInterface = new wxChoice( panelCollector, wxID_ANY, wxDefaultPosition, wxDefaultSize, collClientInterfaceChoices, 0 );	collClientInterface->SetSelection( 0 );	bSizer52111->Add( collClientInterface, 0, wxALL, 5 );		bSizerInterfaceDist21->Add( bSizer52111, 3, wxEXPAND, 5 );		bSizerDistributor11->Add( bSizerInterfaceDist21, 0, wxEXPAND, 5 );		wxBoxSizer* bSizer5521;	bSizer5521 = new wxBoxSizer( wxHORIZONTAL );		wxBoxSizer* bSizer641;	bSizer641 = new wxBoxSizer( wxHORIZONTAL );		lbl_dist_address222 = new wxStaticText( panelCollector, wxID_ANY, wxT("Distributor Interface Address : "), wxDefaultPosition, wxDefaultSize, 0 );	lbl_dist_address222->Wrap( -1 );	bSizer641->Add( lbl_dist_address222, 0, wxALL|wxEXPAND, 5 );		collDistInterfaceAddress = new wxStaticText( panelCollector, wxID_ANY, wxEmptyString, wxDefaultPosition, wxDefaultSize, 0 );	collDistInterfaceAddress->Wrap( -1 );	bSizer641->Add( collDistInterfaceAddress, 0, wxALL, 5 );		bSizer5521->Add( bSizer641, 1, wxEXPAND, 5 );		wxBoxSizer* bSizer651;	bSizer651 = new wxBoxSizer( wxHORIZONTAL );		lbl_dist_address2211 = new wxStaticText( panelCollector, wxID_ANY, wxT("Node Interface Address : "), wxDefaultPosition, wxDefaultSize, 0 );	lbl_dist_address2211->Wrap( -1 );	bSizer651->Add( lbl_dist_address2211, 0, wxALL, 5 );		collClientInterfaceAddress = new wxStaticText( panelCollector, wxID_ANY, wxEmptyString, wxDefaultPosition, wxDefaultSize, 0 );	collClientInterfaceAddress->Wrap( -1 );	bSizer651->Add( collClientInterfaceAddress, 0, wxALL, 5 );		bSizer5521->Add( bSizer651, 1, wxEXPAND, 5 );		bSizerDistributor11->Add( bSizer5521, 0, wxEXPAND, 5 );		wxBoxSizer* bSizerInterfaceDist211;	bSizerInterfaceDist211 = new wxBoxSizer( wxHORIZONTAL );		wxBoxSizer* bSizer5511;	bSizer5511 = new wxBoxSizer( wxHORIZONTAL );		lbl_dist_address211 = new wxStaticText( panelCollector, wxID_ANY, wxT("Attached Distributor Address : "), wxDefaultPosition, wxDefaultSize, 0 );	lbl_dist_address211->Wrap( -1 );	bSizer5511->Add( lbl_dist_address211, 0, wxALL|wxEXPAND, 5 );		collDistAddress = new wxStaticText( panelCollector, wxID_ANY, wxEmptyString, wxDefaultPosition, wxDefaultSize, 0 );	collDistAddress->Wrap( -1 );	bSizer5511->Add( collDistAddress, 0, wxALL, 5 );		bSizerInterfaceDist211->Add( bSizer5511, 1, wxEXPAND, 5 );		wxBoxSizer* bSizer55111;	bSizer55111 = new wxBoxSizer( wxHORIZONTAL );		lbl_dist_address2111 = new wxStaticText( panelCollector, wxID_ANY, wxT("Attached Node Address : "), wxDefaultPosition, wxDefaultSize, 0 );	lbl_dist_address2111->Wrap( -1 );	bSizer55111->Add( lbl_dist_address2111, 0, wxALL|wxEXPAND, 5 );		collClientAddress = new wxStaticText( panelCollector, wxID_ANY, wxEmptyString, wxDefaultPosition, wxDefaultSize, 0 );	collClientAddress->Wrap( -1 );	bSizer55111->Add( collClientAddress, 0, wxALL, 5 );		bSizerInterfaceDist211->Add( bSizer55111, 1, wxEXPAND, 5 );		bSizerDistributor11->Add( bSizerInterfaceDist211, 0, wxEXPAND, 5 );		wxBoxSizer* bSizer6521;	bSizer6521 = new wxBoxSizer( wxHORIZONTAL );			bSizer6521->Add( 0, 0, 1, wxEXPAND, 5 );		collInitBtn = new wxButton( panelCollector, wxID_ANY, wxT("Init"), wxDefaultPosition, wxDefaultSize, 0 );	bSizer6521->Add( collInitBtn, 0, wxALIGN_RIGHT|wxALL, 5 );			bSizer6521->Add( 0, 0, 1, wxEXPAND, 5 );		collProcessBtn = new wxButton( panelCollector, wxID_ANY, wxT("Process"), wxDefaultPosition, wxDefaultSize, 0 );	bSizer6521->Add( collProcessBtn, 0, wxALL, 5 );		collProcessSlider = new wxSlider( panelCollector, wxID_ANY, 10, 1, 100, wxDefaultPosition, wxDefaultSize, wxSL_HORIZONTAL );	bSizer6521->Add( collProcessSlider, 0, wxALL, 5 );		collProcessLabel = new wxStaticText( panelCollector, wxID_ANY, wxT("10"), wxDefaultPosition, wxDefaultSize, 0 );	collProcessLabel->Wrap( -1 );	bSizer6521->Add( collProcessLabel, 0, wxALL, 5 );			bSizer6521->Add( 0, 0, 1, wxEXPAND, 5 );		bSizerDistributor11->Add( bSizer6521, 0, wxEXPAND, 5 );		wxBoxSizer* bSizer2411;	bSizer2411 = new wxBoxSizer( wxHORIZONTAL );		wxBoxSizer* bSizerCollDist21;	bSizerCollDist21 = new wxBoxSizer( wxVERTICAL );		lbl_attached_collectors11 = new wxStaticText( panelCollector, wxID_ANY, wxT("File List"), wxDefaultPosition, wxDefaultSize, 0 );	lbl_attached_collectors11->Wrap( -1 );	bSizerCollDist21->Add( lbl_attached_collectors11, 1, wxALL, 5 );		collFileList = new wxListCtrl( panelCollector, wxID_ANY, wxDefaultPosition, wxSize( 400,-1 ), wxLC_HRULES|wxLC_REPORT|wxLC_SINGLE_SEL|wxLC_VRULES );	bSizerCollDist21->Add( collFileList, 9, wxALL|wxEXPAND, 5 );		bSizer2411->Add( bSizerCollDist21, 2, 0, 5 );		wxBoxSizer* bSizerCollDist111;	bSizerCollDist111 = new wxBoxSizer( wxVERTICAL );		lbl_attached_clients11 = new wxStaticText( panelCollector, wxID_ANY, wxT("Parameter List"), wxDefaultPosition, wxDefaultSize, 0 );	lbl_attached_clients11->Wrap( -1 );	bSizerCollDist111->Add( lbl_attached_clients11, 1, wxALL, 5 );		collParamList = new wxListCtrl( panelCollector, wxID_ANY, wxDefaultPosition, wxSize( 200,-1 ), wxLC_HRULES|wxLC_REPORT|wxLC_SINGLE_SEL|wxLC_VRULES );	bSizerCollDist111->Add( collParamList, 9, wxALL|wxEXPAND, 5 );		bSizer2411->Add( bSizerCollDist111, 1, 0, 5 );		wxBoxSizer* bSizerCollDist1111;	bSizerCollDist1111 = new wxBoxSizer( wxVERTICAL );		lbl_attached_clients111 = new wxStaticText( panelCollector, wxID_ANY, wxT("Executor List"), wxDefaultPosition, wxDefaultSize, 0 );	lbl_attached_clients111->Wrap( -1 );	bSizerCollDist1111->Add( lbl_attached_clients111, 1, wxALL, 5 );		collExecList = new wxListCtrl( panelCollector, wxID_ANY, wxDefaultPosition, wxSize( 200,-1 ), wxLC_HRULES|wxLC_REPORT|wxLC_SINGLE_SEL|wxLC_VRULES );	bSizerCollDist1111->Add( collExecList, 9, wxALL|wxEXPAND, 5 );		bSizer2411->Add( bSizerCollDist1111, 1, 0, 5 );		bSizerDistributor11->Add( bSizer2411, 0, wxEXPAND, 5 );		collLog = new wxListBox( panelCollector, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, NULL, 0 ); 	bSizerDistributor11->Add( collLog, 1, wxALL|wxEXPAND, 5 );		panelCollector->SetSizer( bSizerDistributor11 );	panelCollector->Layout();	bSizerDistributor11->Fit( panelCollector );	noteBook->AddPage( panelCollector, wxT("Collector"), false );	panelClient = new wxPanel( noteBook, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxDOUBLE_BORDER|wxTAB_TRAVERSAL );	wxBoxSizer* bSizerDistributor111;	bSizerDistributor111 = new wxBoxSizer( wxVERTICAL );		wxBoxSizer* bSizerInterfaceDist212;	bSizerInterfaceDist212 = new wxBoxSizer( wxHORIZONTAL );		wxBoxSizer* bSizer52112;	bSizer52112 = new wxBoxSizer( wxHORIZONTAL );		lblinterface112 = new wxStaticText( panelClient, wxID_ANY, wxT("Distributor Interface : "), wxDefaultPosition, wxDefaultSize, 0 );	lblinterface112->Wrap( -1 );	bSizer52112->Add( lblinterface112, 0, wxALIGN_CENTER|wxALL, 5 );		wxArrayString clientDistInterfaceChoices;	clientDistInterface = new wxChoice( panelClient, wxID_ANY, wxDefaultPosition, wxDefaultSize, clientDistInterfaceChoices, 0 );	clientDistInterface->SetSelection( 0 );	bSizer52112->Add( clientDistInterface, 0, wxALIGN_CENTER|wxALL, 5 );		bSizerInterfaceDist212->Add( bSizer52112, 3, wxEXPAND, 5 );		wxBoxSizer* bSizer521111;	bSizer521111 = new wxBoxSizer( wxHORIZONTAL );		lblinterface1111 = new wxStaticText( panelClient, wxID_ANY, wxT("Collector Interface : "), wxDefaultPosition, wxDefaultSize, 0 );	lblinterface1111->Wrap( -1 );	bSizer521111->Add( lblinterface1111, 0, wxALIGN_CENTER|wxALL, 5 );		wxArrayString clientCollInterfaceChoices;	clientCollInterface = new wxChoice( panelClient, wxID_ANY, wxDefaultPosition, wxDefaultSize, clientCollInterfaceChoices, 0 );	clientCollInterface->SetSelection( 0 );	bSizer521111->Add( clientCollInterface, 0, wxALL, 5 );		bSizerInterfaceDist212->Add( bSizer521111, 3, wxEXPAND, 5 );		bSizerDistributor111->Add( bSizerInterfaceDist212, 0, wxEXPAND, 5 );		wxBoxSizer* bSizer55211;	bSizer55211 = new wxBoxSizer( wxHORIZONTAL );		wxBoxSizer* bSizer6411;	bSizer6411 = new wxBoxSizer( wxHORIZONTAL );		lbl_dist_address2221 = new wxStaticText( panelClient, wxID_ANY, wxT("Distributor Interface Address : "), wxDefaultPosition, wxDefaultSize, 0 );	lbl_dist_address2221->Wrap( -1 );	bSizer6411->Add( lbl_dist_address2221, 0, wxALL|wxEXPAND, 5 );		clientDistInterfaceAddress = new wxStaticText( panelClient, wxID_ANY, wxEmptyString, wxDefaultPosition, wxDefaultSize, 0 );	clientDistInterfaceAddress->Wrap( -1 );	bSizer6411->Add( clientDistInterfaceAddress, 0, wxALL, 5 );		bSizer55211->Add( bSizer6411, 1, wxEXPAND, 5 );		wxBoxSizer* bSizer6511;	bSizer6511 = new wxBoxSizer( wxHORIZONTAL );		lbl_dist_address22111 = new wxStaticText( panelClient, wxID_ANY, wxT("Collector Interface Address : "), wxDefaultPosition, wxDefaultSize, 0 );	lbl_dist_address22111->Wrap( -1 );	bSizer6511->Add( lbl_dist_address22111, 0, wxALL, 5 );		clientCollInterfaceAddress = new wxStaticText( panelClient, wxID_ANY, wxEmptyString, wxDefaultPosition, wxDefaultSize, 0 );	clientCollInterfaceAddress->Wrap( -1 );	bSizer6511->Add( clientCollInterfaceAddress, 0, wxALL, 5 );		bSizer55211->Add( bSizer6511, 1, wxEXPAND, 5 );		bSizerDistributor111->Add( bSizer55211, 0, wxEXPAND, 5 );		wxBoxSizer* bSizerInterfaceDist2111;	bSizerInterfaceDist2111 = new wxBoxSizer( wxHORIZONTAL );		wxBoxSizer* bSizer55112;	bSizer55112 = new wxBoxSizer( wxHORIZONTAL );		lbl_dist_address2112 = new wxStaticText( panelClient, wxID_ANY, wxT("State : "), wxDefaultPosition, wxDefaultSize, 0 );	lbl_dist_address2112->Wrap( -1 );	bSizer55112->Add( lbl_dist_address2112, 0, wxALL|wxEXPAND, 5 );		clientState = new wxStaticText( panelClient, wxID_ANY, wxEmptyString, wxDefaultPosition, wxDefaultSize, 0 );	clientState->Wrap( -1 );	bSizer55112->Add( clientState, 0, wxALL, 5 );		bSizerInterfaceDist2111->Add( bSizer55112, 1, wxEXPAND, 5 );		wxBoxSizer* bSizer551111;	bSizer551111 = new wxBoxSizer( wxHORIZONTAL );		lbl_dist_address21111 = new wxStaticText( panelClient, wxID_ANY, wxT("Attached Collector Address : "), wxDefaultPosition, wxDefaultSize, 0 );	lbl_dist_address21111->Wrap( -1 );	bSizer551111->Add( lbl_dist_address21111, 0, wxALL|wxEXPAND, 5 );		clientCollAddress = new wxStaticText( panelClient, wxID_ANY, wxEmptyString, wxDefaultPosition, wxDefaultSize, 0 );	clientCollAddress->Wrap( -1 );	bSizer551111->Add( clientCollAddress, 0, wxALL, 5 );		bSizerInterfaceDist2111->Add( bSizer551111, 1, wxEXPAND, 5 );		bSizerDistributor111->Add( bSizerInterfaceDist2111, 0, wxEXPAND, 5 );		wxBoxSizer* bSizer79;	bSizer79 = new wxBoxSizer( wxHORIZONTAL );			bSizer79->Add( 0, 0, 1, wxEXPAND, 5 );		clientInitBtn = new wxButton( panelClient, wxID_ANY, wxT("Init"), wxDefaultPosition, wxDefaultSize, 0 );	bSizer79->Add( clientInitBtn, 0, wxALL, 5 );			bSizer79->Add( 0, 0, 1, wxEXPAND, 5 );		bSizerDistributor111->Add( bSizer79, 0, wxEXPAND, 5 );		wxBoxSizer* bSizer24111;	bSizer24111 = new wxBoxSizer( wxHORIZONTAL );		wxBoxSizer* bSizerCollDist211;	bSizerCollDist211 = new wxBoxSizer( wxVERTICAL );		lbl_attached_collectors111 = new wxStaticText( panelClient, wxID_ANY, wxT("File List"), wxDefaultPosition, wxDefaultSize, 0 );	lbl_attached_collectors111->Wrap( -1 );	bSizerCollDist211->Add( lbl_attached_collectors111, 1, wxALL, 5 );		clientFileList = new wxListCtrl( panelClient, wxID_ANY, wxDefaultPosition, wxSize( 400,-1 ), wxLC_HRULES|wxLC_REPORT|wxLC_SINGLE_SEL|wxLC_VRULES );	bSizerCollDist211->Add( clientFileList, 9, wxALL|wxEXPAND, 5 );		bSizer24111->Add( bSizerCollDist211, 2, 0, 5 );		wxBoxSizer* bSizerCollDist1112;	bSizerCollDist1112 = new wxBoxSizer( wxVERTICAL );		lbl_attached_clients112 = new wxStaticText( panelClient, wxID_ANY, wxT("Parameter List"), wxDefaultPosition, wxDefaultSize, 0 );	lbl_attached_clients112->Wrap( -1 );	bSizerCollDist1112->Add( lbl_attached_clients112, 1, wxALL, 5 );		clientParamList = new wxListCtrl( panelClient, wxID_ANY, wxDefaultPosition, wxSize( 200,-1 ), wxLC_HRULES|wxLC_REPORT|wxLC_SINGLE_SEL|wxLC_VRULES );	bSizerCollDist1112->Add( clientParamList, 9, wxALL|wxEXPAND, 5 );		bSizer24111->Add( bSizerCollDist1112, 1, 0, 5 );		wxBoxSizer* bSizerCollDist11111;	bSizerCollDist11111 = new wxBoxSizer( wxVERTICAL );		lbl_attached_clients1111 = new wxStaticText( panelClient, wxID_ANY, wxT("Executor List"), wxDefaultPosition, wxDefaultSize, 0 );	lbl_attached_clients1111->Wrap( -1 );	bSizerCollDist11111->Add( lbl_attached_clients1111, 1, wxALL, 5 );		clientExecList = new wxListCtrl( panelClient, wxID_ANY, wxDefaultPosition, wxSize( 200,-1 ), wxLC_HRULES|wxLC_REPORT|wxLC_SINGLE_SEL|wxLC_VRULES );	bSizerCollDist11111->Add( clientExecList, 9, wxALL|wxEXPAND, 5 );		bSizer24111->Add( bSizerCollDist11111, 1, 0, 5 );		bSizerDistributor111->Add( bSizer24111, 3, wxEXPAND, 5 );		clientLog = new wxListBox( panelClient, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, NULL, 0 ); 	bSizerDistributor111->Add( clientLog, 2, wxALL|wxEXPAND, 5 );		panelClient->SetSizer( bSizerDistributor111 );	panelClient->Layout();	bSizerDistributor111->Fit( panelClient );	noteBook->AddPage( panelClient, wxT("Node"), false );		bSizer1->Add( noteBook, 1, wxEXPAND | wxALL, 5 );		wxBoxSizer* bSizer10;	bSizer10 = new wxBoxSizer( wxVERTICAL );		lbl_gen_logwindow = new wxStaticText( this, wxID_ANY, wxT("Log Window"), wxDefaultPosition, wxDefaultSize, 0 );	lbl_gen_logwindow->Wrap( -1 );	bSizer10->Add( lbl_gen_logwindow, 0, wxALL, 5 );		genericLog = new wxListBox( this, wxID_ANY, wxDefaultPosition, wxSize( -1,150 ), 0, NULL, 0 ); 	bSizer10->Add( genericLog, 0, wxALL|wxEXPAND, 5 );		bSizer1->Add( bSizer10, 0, wxEXPAND, 5 );		this->SetSizer( bSizer1 );	this->Layout();	bSizer1->Fit( this );		this->Centre( wxBOTH );		// Connect Events	distInitBtn->Connect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( MainFrame::onDistInitClick ), NULL, this );	distPollBtn->Connect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( MainFrame::onDistPollClick ), NULL, this );	distCleanUpBtn->Connect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( MainFrame::onDistCleanupClick ), NULL, this );	collInitBtn->Connect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( MainFrame::onCollInitClick ), NULL, this );	collProcessBtn->Connect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( MainFrame::onCollProcessClick ), NULL, this );	collProcessSlider->Connect( wxEVT_SCROLL_TOP, wxScrollEventHandler( MainFrame::onCollProcessSliderScroll ), NULL, this );	collProcessSlider->Connect( wxEVT_SCROLL_BOTTOM, wxScrollEventHandler( MainFrame::onCollProcessSliderScroll ), NULL, this );	collProcessSlider->Connect( wxEVT_SCROLL_LINEUP, wxScrollEventHandler( MainFrame::onCollProcessSliderScroll ), NULL, this );	collProcessSlider->Connect( wxEVT_SCROLL_LINEDOWN, wxScrollEventHandler( MainFrame::onCollProcessSliderScroll ), NULL, this );	collProcessSlider->Connect( wxEVT_SCROLL_PAGEUP, wxScrollEventHandler( MainFrame::onCollProcessSliderScroll ), NULL, this );	collProcessSlider->Connect( wxEVT_SCROLL_PAGEDOWN, wxScrollEventHandler( MainFrame::onCollProcessSliderScroll ), NULL, this );	collProcessSlider->Connect( wxEVT_SCROLL_THUMBTRACK, wxScrollEventHandler( MainFrame::onCollProcessSliderScroll ), NULL, this );	collProcessSlider->Connect( wxEVT_SCROLL_THUMBRELEASE, wxScrollEventHandler( MainFrame::onCollProcessSliderScroll ), NULL, this );	collProcessSlider->Connect( wxEVT_SCROLL_CHANGED, wxScrollEventHandler( MainFrame::onCollProcessSliderScroll ), NULL, this );	clientInitBtn->Connect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( MainFrame::onClientInitClick ), NULL, this );}MainFrame::~MainFrame(){	// Disconnect Events	distInitBtn->Disconnect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( MainFrame::onDistInitClick ), NULL, this );	distPollBtn->Disconnect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( MainFrame::onDistPollClick ), NULL, this );	distCleanUpBtn->Disconnect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( MainFrame::onDistCleanupClick ), NULL, this );	collInitBtn->Disconnect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( MainFrame::onCollInitClick ), NULL, this );	collProcessBtn->Disconnect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( MainFrame::onCollProcessClick ), NULL, this );	collProcessSlider->Disconnect( wxEVT_SCROLL_TOP, wxScrollEventHandler( MainFrame::onCollProcessSliderScroll ), NULL, this );	collProcessSlider->Disconnect( wxEVT_SCROLL_BOTTOM, wxScrollEventHandler( MainFrame::onCollProcessSliderScroll ), NULL, this );	collProcessSlider->Disconnect( wxEVT_SCROLL_LINEUP, wxScrollEventHandler( MainFrame::onCollProcessSliderScroll ), NULL, this );	collProcessSlider->Disconnect( wxEVT_SCROLL_LINEDOWN, wxScrollEventHandler( MainFrame::onCollProcessSliderScroll ), NULL, this );	collProcessSlider->Disconnect( wxEVT_SCROLL_PAGEUP, wxScrollEventHandler( MainFrame::onCollProcessSliderScroll ), NULL, this );	collProcessSlider->Disconnect( wxEVT_SCROLL_PAGEDOWN, wxScrollEventHandler( MainFrame::onCollProcessSliderScroll ), NULL, this );	collProcessSlider->Disconnect( wxEVT_SCROLL_THUMBTRACK, wxScrollEventHandler( MainFrame::onCollProcessSliderScroll ), NULL, this );	collProcessSlider->Disconnect( wxEVT_SCROLL_THUMBRELEASE, wxScrollEventHandler( MainFrame::onCollProcessSliderScroll ), NULL, this );	collProcessSlider->Disconnect( wxEVT_SCROLL_CHANGED, wxScrollEventHandler( MainFrame::onCollProcessSliderScroll ), NULL, this );	clientInitBtn->Disconnect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( MainFrame::onClientInitClick ), NULL, this );	}